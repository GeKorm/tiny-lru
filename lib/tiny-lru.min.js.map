{"version":3,"sources":["tiny-lru.js"],"names":["constructor","max","ttl","clear","push","first","last","registry","Map","slots","JSON","parse","map","join","empty","Object","keys","reverse","delete","remove","evict","get","has","expiry","Date","now","value","set","previous","next","length","pop","getTime","exports","define","amd","lru","module","window","global"],"mappings":"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","file":"unknown","sourcesContent":["/**\r\n * Tiny LRU cache for Client or Server\r\n *\r\n * @author Jason Mulligan <jason.mulligan@avoidwork.com>\r\n * @copyright 2018\r\n * @license BSD-3-Clause\r\n * @link https://github.com/avoidwork/tiny-lru\r\n * @version 5.0.0\r\n */\r\n\r\n\r\n(function (global) {\r\n\tconst empty = null;\r\n\r\n\tclass LRU {\r\n\t\tconstructor (max, ttl) {\r\n\t\t\tthis.max = max;\r\n\t\t\tthis.ttl = ttl;\r\n\r\n\t\t\treturn this.clear();\r\n\t\t}\r\n\r\n\t\tclear () {\r\n\t\t\tconst x = [];\r\n\t\t\tlet i = -1;\r\n\r\n\t\t\twhile (++i < this.max) x.push(`\"s${i + 1}\"`);\r\n\r\n\t\t\tthis.first = empty;\r\n\t\t\tthis.last = empty;\r\n\t\t\tthis.registry = new Map();\r\n\t\t\tthis.slots = JSON.parse(`{${x.map(g => `${g}: {\"expiry\":-1,\"next\":null,\"previous\":null,\"value\":null}`).join(\",\")}}`);\r\n\t\t\tthis.empty = Object.keys(this.slots).reverse();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdelete (key, bypass = false) {\r\n\t\t\treturn this.remove(key, bypass);\r\n\t\t}\r\n\r\n\t\tevict () {\r\n\t\t\treturn this.remove(this.last, true);\r\n\t\t}\r\n\r\n\t\tget (key) {\r\n\t\t\tlet result;\r\n\r\n\t\t\tif (this.has(key) === true) {\r\n\t\t\t\tconst item = this.slots[this.registry.get(key)];\r\n\r\n\t\t\t\tif (item.expiry === -1 || item.expiry > Date.now()) {\r\n\t\t\t\t\tresult = item.value;\r\n\t\t\t\t\tthis.set(key, result, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.remove(key, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\thas (key) {\r\n\t\t\treturn this.registry.has(key);\r\n\t\t}\r\n\r\n\t\tremove (key, bypass = false) {\r\n\t\t\tif (bypass === true || this.has(key)) {\r\n\t\t\t\tconst slot = this.registry.get(key),\r\n\t\t\t\t\titem = this.slots[slot];\r\n\r\n\t\t\t\tif (item.previous !== empty) {\r\n\t\t\t\t\tthis.slots[this.registry.get(item.previous)].next = item.next;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (item.next !== empty) {\r\n\t\t\t\t\tthis.slots[this.registry.get(item.next)].previous = item.previous;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.first === key) {\r\n\t\t\t\t\tthis.first = item.previous;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.last === key) {\r\n\t\t\t\t\tthis.last = item.next;\r\n\t\t\t\t}\r\n\r\n\t\t\t\titem.expiry = -1;\r\n\t\t\t\titem.next = empty;\r\n\t\t\t\titem.previous = empty;\r\n\t\t\t\titem.value = empty;\r\n\r\n\t\t\t\tthis.registry.delete(key);\r\n\t\t\t\tthis.empty.push(slot);\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tset (key, value, bypass = false) {\r\n\t\t\tif (bypass === true || this.has(key) === true) {\r\n\t\t\t\tconst item = this.slots[this.registry.get(key)];\r\n\r\n\t\t\t\titem.value = value;\r\n\r\n\t\t\t\tif (this.first !== key) {\r\n\t\t\t\t\tconst n = item.next,\r\n\t\t\t\t\t\tp = item.previous,\r\n\t\t\t\t\t\tf = this.slots[this.registry.get(this.first)];\r\n\r\n\t\t\t\t\titem.next = empty;\r\n\t\t\t\t\titem.previous = this.first;\r\n\t\t\t\t\tf.next = key;\r\n\r\n\t\t\t\t\tif (f.previous === key) {\r\n\t\t\t\t\t\tf.previous = empty;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (n !== empty && n !== this.first) {\r\n\t\t\t\t\t\tif (p !== empty) {\r\n\t\t\t\t\t\t\tthis.slots[this.registry.get(p)].next = n;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.slots[this.registry.get(n)].previous = p;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.last === key) {\r\n\t\t\t\t\t\tthis.last = n;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.first = key;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (this.empty.length === 0) {\r\n\t\t\t\t\tthis.evict();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst slot = this.empty.pop(),\r\n\t\t\t\t\titem = this.slots[slot];\r\n\r\n\t\t\t\tthis.registry.set(key, slot);\r\n\t\t\t\titem.expiry = this.ttl > 0 ? new Date().getTime() + this.ttl : -1;\r\n\t\t\t\titem.next = empty;\r\n\t\t\t\titem.previous = this.first;\r\n\t\t\t\titem.value = value;\r\n\r\n\t\t\t\tif (this.last === empty) {\r\n\t\t\t\t\tthis.last = key;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.slots[this.registry.get(this.first)].next = key;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.first = key;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction factory (max = 1000, ttl = 0) {\r\n\t\treturn new LRU(max, ttl);\r\n\t}\r\n\r\n\t// Node, AMD & window supported\r\n\tif (typeof exports !== \"undefined\") {\r\n\t\tmodule.exports = factory;\r\n\t} else if (typeof define === \"function\" && define.amd !== void 0) {\r\n\t\tdefine(() => factory);\r\n\t} else {\r\n\t\tglobal.lru = factory;\r\n\t}\r\n}(typeof window !== \"undefined\" ? window : global));\r\n"]}