{"version":3,"sources":["tiny-lru.js"],"names":["constructor","max","size","ttl","clear","push","first","last","registry","slots","JSON","parse","map","join","empty","Object","keys","reverse","delete","remove","evict","get","has","expiry","Date","now","value","set","previous","next","pop","getTime","exports","define","amd","lru","module","window","global"],"mappings":"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","file":"unknown","sourcesContent":["/**\r\n * Tiny LRU cache for Client or Server\r\n *\r\n * @author Jason Mulligan <jason.mulligan@avoidwork.com>\r\n * @copyright 2018\r\n * @license BSD-3-Clause\r\n * @link https://github.com/avoidwork/tiny-lru\r\n * @version 5.0.0\r\n */\r\n\r\n\r\n(function (global) {\r\n\tconst empty = null;\r\n\r\n\tclass LRU {\r\n\t\tconstructor (max, ttl) {\r\n\t\t\tthis.max = max;\r\n\t\t\tthis.size = 0;\r\n\t\t\tthis.ttl = ttl;\r\n\r\n\t\t\treturn this.clear();\r\n\t\t}\r\n\r\n\t\tclear () {\r\n\t\t\tconst x = [];\r\n\t\t\tlet i = -1;\r\n\r\n\t\t\twhile (++i < this.max) x.push(`\"s${i + 1}\"`);\r\n\r\n\t\t\tthis.first = empty;\r\n\t\t\tthis.last = empty;\r\n\t\t\tthis.registry = {};\r\n\t\t\tthis.size = 0;\r\n\t\t\tthis.slots = JSON.parse(`{${x.map(g => `${g}: {\"expiry\":-1,\"next\":null,\"previous\":null,\"value\":null}`).join(\",\")}}`);\r\n\t\t\tthis.empty = Object.keys(this.slots).reverse();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tdelete (key, bypass = false) {\r\n\t\t\treturn this.remove(key, bypass);\r\n\t\t}\r\n\r\n\t\tevict () {\r\n\t\t\treturn this.remove(this.last, true);\r\n\t\t}\r\n\r\n\t\tget (key) {\r\n\t\t\tlet result;\r\n\r\n\t\t\tif (this.has(key) === true) {\r\n\t\t\t\tconst item = this.slots[this.registry[key]];\r\n\r\n\t\t\t\tif (item.expiry === -1 || item.expiry > Date.now()) {\r\n\t\t\t\t\tresult = item.value;\r\n\t\t\t\t\tthis.set(key, result, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.remove(key, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\thas (key) {\r\n\t\t\treturn key in this.registry;\r\n\t\t}\r\n\r\n\t\tremove (key, bypass = false) {\r\n\t\t\tif (bypass === true || this.has(key) === true) {\r\n\t\t\t\tconst slot = this.registry[key],\r\n\t\t\t\t\titem = this.slots[slot];\r\n\r\n\t\t\t\tdelete this.registry[key];\r\n\t\t\t\tthis.empty.push(slot);\r\n\t\t\t\tthis.size--;\r\n\r\n\t\t\t\tif (item.previous !== empty) {\r\n\t\t\t\t\tthis.slots[this.registry[item.previous]].next = item.next;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (item.next !== empty) {\r\n\t\t\t\t\tthis.slots[this.registry[item.next]].previous = item.previous;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.first === key) {\r\n\t\t\t\t\tthis.first = item.previous;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.last === key) {\r\n\t\t\t\t\tthis.last = item.next;\r\n\t\t\t\t}\r\n\r\n\t\t\t\titem.expiry = -1;\r\n\t\t\t\titem.next = empty;\r\n\t\t\t\titem.previous = empty;\r\n\t\t\t\titem.value = empty;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tset (key, value, bypass = false) {\r\n\t\t\tif (bypass === true || this.has(key) === true) {\r\n\t\t\t\tconst item = this.slots[this.registry[key]];\r\n\r\n\t\t\t\titem.value = value;\r\n\r\n\t\t\t\tif (this.first !== key) {\r\n\t\t\t\t\tconst n = item.next,\r\n\t\t\t\t\t\tp = item.previous,\r\n\t\t\t\t\t\tf = this.slots[this.registry[this.first]];\r\n\r\n\t\t\t\t\titem.next = empty;\r\n\t\t\t\t\titem.previous = this.first;\r\n\t\t\t\t\tf.next = key;\r\n\r\n\t\t\t\t\tif (f.previous === key) {\r\n\t\t\t\t\t\tf.previous = empty;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (n !== empty && n !== this.first) {\r\n\t\t\t\t\t\tif (p !== empty) {\r\n\t\t\t\t\t\t\tthis.slots[this.registry[p]].next = n;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.slots[this.registry[n]].previous = p;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.last === key) {\r\n\t\t\t\t\t\tthis.last = n;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.first = key;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (this.size === this.max) {\r\n\t\t\t\t\tthis.evict();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst slot = this.empty.pop(),\r\n\t\t\t\t\titem = this.slots[slot];\r\n\r\n\t\t\t\tthis.registry[key] = slot;\r\n\t\t\t\titem.expiry = this.ttl > 0 ? new Date().getTime() + this.ttl : -1;\r\n\t\t\t\titem.next = empty;\r\n\t\t\t\titem.previous = this.first;\r\n\t\t\t\titem.value = value;\r\n\r\n\t\t\t\tif (this.last === empty) {\r\n\t\t\t\t\tthis.last = key;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.slots[this.registry[this.first]].next = key;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.first = key;\r\n\t\t\t\tthis.size++;\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction factory (max = 1000, ttl = 0) {\r\n\t\treturn new LRU(max, ttl);\r\n\t}\r\n\r\n\t// Node, AMD & window supported\r\n\tif (typeof exports !== \"undefined\") {\r\n\t\tmodule.exports = factory;\r\n\t} else if (typeof define === \"function\" && define.amd !== void 0) {\r\n\t\tdefine(() => factory);\r\n\t} else {\r\n\t\tglobal.lru = factory;\r\n\t}\r\n}(typeof window !== \"undefined\" ? window : global));\r\n"]}