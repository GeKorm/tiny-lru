{"name":"Tiny LRU","tagline":"Least Recently Used cache for Client or Server","body":"# Tiny LRU\r\n\r\nLeast Recently Used cache for Client or Server.\r\n\r\n[![build status](https://secure.travis-ci.org/avoidwork/tiny-lru.svg)](http://travis-ci.org/avoidwork/tiny-lru)\r\n\r\n```javascript\r\nvar cache = lru(500);\r\n```\r\n\r\n## evict\r\n### Method\r\n\r\nEvicts the least recently used item from cache\r\n\r\n\treturn {Object} LRU instance\r\n\r\n**Example**\r\n\r\n```javascript\r\ncache.evict();\r\n```\r\n\r\n## first\r\n### Property\r\n\r\nItem in \"first\" or \"top\" position\r\n\r\n**Example**\r\n\r\n```javascript\r\nvar cache = lru();\r\n\r\ncache.first; // null - it's a new cache!\r\n```\r\n\r\n## get\r\n### Method\r\n\r\nGets cached item and moves it to the front\r\n\r\n\tparam  {String} key Item key\r\n\treturn {Mixed}      Undefined or Item value\r\n\r\n**Example**\r\n\r\n```javascript\r\nvar item = cache.get(\"myKey\");\r\n```\r\n\r\n## items\r\n### Property\r\n\r\nHash of cache items\r\n\r\n**Example**\r\n\r\n```javascript\r\nvar cache = lru();\r\n\r\ncache.items; // {}\r\n```\r\n\r\n## max\r\n### Property\r\n\r\nMax items to hold in cache (1000)\r\n\r\n**Example**\r\n\r\n```javascript\r\nvar cache = lru(500);\r\n\r\ncache.max; // 500\r\n```\r\n\r\n## last\r\n### Property\r\n\r\nItem in \"last\" or \"bottom\" position\r\n\r\n**Example**\r\n\r\n```javascript\r\nvar cache = lru();\r\n\r\ncache.last; // null - it's a new cache!\r\n```\r\n\r\n## length\r\n### Property\r\n\r\nNumber of items in cache\r\n\r\n**Example**\r\n\r\n```javascript\r\nvar cache = lru();\r\n\r\ncache.length; // 0 - it's a new cache!\r\n```\r\n\r\n## remove\r\n### Method\r\n\r\nRemoves item from cache\r\n\r\n\tparam  {String} key Item key\r\n\treturn {Object}     Item\r\n\r\n**Example**\r\n\r\n```javascript\r\nvar staleItem = cache.remove(\"myKey\");\r\n```\r\n\r\n## set\r\n### Method\r\n\r\nSets item in cache as `first`\r\n\r\n\tparam  {String} key   Item key\r\n\tparam  {Mixed}  value Item value\r\n\treturn {Object}       LRU instance\r\n\r\n**Example**\r\n\r\n```javascript\r\ncache.set(\"myKey\", {prop: true});\r\n```\r\n\r\nLodash provides a `memoize` function with a cache that can be swapped out as long as it implements the right interface. Sample usage with lodash:\r\n```javascript\r\n_.memoize.Cache = lru().constructor;\r\nvar memoized = _.memoize(myFunc);\r\nmemoized.cache.max = 10;\r\n```\r\nSee the [lodash docs](https://lodash.com/docs#memoize) for more on `memoize`.\r\n\r\n## License\r\nCopyright (c) 2016 Jason Mulligan\r\nLicensed under the BSD-3 license.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}